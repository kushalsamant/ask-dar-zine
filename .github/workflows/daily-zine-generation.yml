name: Daily Zine Generation

on:
  schedule:
    # Run daily at 6:00 AM IST (12:30 AM UTC)
    - cron: '30 0 * * *'
  workflow_dispatch:  # Allow manual triggering

jobs:
  generate-daily-zine:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-dotenv reportlab requests Pillow beautifulsoup4
        
    - name: Create ask.env from secrets
      run: |
        cat > ask.env << EOF
        # === Text Generation (Free Together.ai) ===
        TEXT_PROVIDER=together
        TEXT_MODEL=meta-llama/Llama-3.3-70B-Instruct-Turbo-Free
        TOGETHER_API_BASE=${{ secrets.TOGETHER_API_BASE }}
        TOGETHER_API_KEY=${{ secrets.TOGETHER_API_KEY }}
        
        # === Image Generation (Free Together.ai) ===
        IMAGE_PROVIDER=together
        IMAGE_MODEL=black-forest-labs/FLUX.1-schnell-free
        IMAGE_WIDTH=${{ secrets.IMAGE_WIDTH }}
        IMAGE_HEIGHT=${{ secrets.IMAGE_HEIGHT }}
        INFERENCE_STEPS=${{ secrets.INFERENCE_STEPS }}
        GUIDANCE_SCALE=${{ secrets.GUIDANCE_SCALE }}
        
        # === Prompt Configuration ===
        PROMPT_SYSTEM=${{ secrets.PROMPT_SYSTEM }}
        PROMPT_TEMPLATE=${{ secrets.PROMPT_TEMPLATE }}
        CAPTION_SYSTEM=${{ secrets.CAPTION_SYSTEM }}
        CAPTION_TEMPLATE=${{ secrets.CAPTION_TEMPLATE }}
        FALLBACK_THEME=${{ secrets.FALLBACK_THEME }}
        
        # === Web Scraper Configuration ===
        SCRAPER_TIMEOUT=${{ secrets.SCRAPER_TIMEOUT }}
        SCRAPER_MAX_RETRIES=${{ secrets.SCRAPER_MAX_RETRIES }}
        SCRAPER_MAX_WORKERS=${{ secrets.SCRAPER_MAX_WORKERS }}
        SCRAPER_ARTICLES_PER_SOURCE=${{ secrets.SCRAPER_ARTICLES_PER_SOURCE }}
        SCRAPER_USER_AGENT=${{ secrets.SCRAPER_USER_AGENT }}
        SCRAPER_CONTENT_DIR=${{ secrets.SCRAPER_CONTENT_DIR }}
        EOF
        
    - name: Run daily zine generation
      run: |
        python daily_zine_generator.py
        
    - name: Upload generated content
      uses: actions/upload-artifact@v3
      with:
        name: daily-zine-${{ github.run_number }}
        path: |
          images/
          captions/
          daily_pdfs/
          scraped_content/
          logs/
        retention-days: 14
        
    - name: Commit and push generated content
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add images/ captions/ daily_pdfs/ scraped_content/ logs/
        git diff --quiet && git diff --staged --quiet || git commit -m "Daily zine generation - ${{ github.run_number }}"
        git push
        
    - name: Create summary
      run: |
        echo "## Daily Zine Generation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Run Number:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "**Generated:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**Status:** ✅ Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Generated Content:" >> $GITHUB_STEP_SUMMARY
        if [ -d "images" ]; then
          echo "- **Images:** $(find images -name "*.jpg" | wc -l) files" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "captions" ]; then
          echo "- **Captions:** $(find captions -name "*.txt" | wc -l) files" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "daily_pdfs" ]; then
          echo "- **Daily PDFs:** $(find daily_pdfs -name "*.pdf" | wc -l) files" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "scraped_content" ]; then
          echo "- **Scraped Articles:** $(find scraped_content -name "*.json" | wc -l) files" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**🎨 Daily zine generation completed!**" >> $GITHUB_STEP_SUMMARY
        echo "**📄 50 full-bleed images in one style**" >> $GITHUB_STEP_SUMMARY
        echo "**📝 50 poetic captions**" >> $GITHUB_STEP_SUMMARY
        echo "**📚 1 comprehensive PDF**" >> $GITHUB_STEP_SUMMARY 